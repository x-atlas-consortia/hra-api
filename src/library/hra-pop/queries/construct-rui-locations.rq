#   This SPARQL query constructs a result set representing detailed information about tissue donors, samples, spatial entities,
#   datasets, and their relationships. It combines data from the CCF ontology and experimental data sources.
#  
#  * Query Structure:
#       The query uses the CONSTRUCT statement to build a result set containing information about tissue donors, samples, spatial entities,
#       datasets, and their relationships. It retrieves data from the CCF ontology and external data sources.
#       The query constructs nodes for various entities, including tissue donors, samples, spatial entities, datasets, and spatial placements.
#       It also captures details such as sex, age, BMI, consortium names, creator information, dimensions, annotations, and more.
#
#  * Note: The filter parameters (e.g., age, sex, BMI) can be added dynamically by the API user.
#          The string filter commented below serves as a placeholder and will be replaced with the appropriate filter conditions
#          when used in the API call.

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ccf: <http://purl.org/ccf/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX HRApop: <https://purl.humanatlas.io/graph/hra-pop>
PREFIX HRA: <https://purl.humanatlas.io/collection/hra-kg/draft>

CONSTRUCT {
  ?donor rdf:type ccf:Donor ;
         ccf:sex ?sex ;
         ccf:age ?age ;
         ccf:bmi ?bmi ;
         ccf:consortium_name ?consortium ;
         ccf:tissue_provider_name ?provider ;
         rdfs:label ?donorLabel ;
         rdfs:comment ?donorDescription ;
         ccf:url ?link .
  ?block rdf:type ccf:Sample ;
          ccf:sample_type ?sampleType ;
          ccf:has_registration_location ?rui_location ;
          ccf:subdivided_into_sections ?section ;
          ccf:comes_from ?donor ;
          ccf:generates_dataset ?dataset .
  ?rui_location rdf:type ccf:SpatialEntity ;
                dcterms:creator ?creator ;
                ccf:creator_first_name ?creator_first_name ;
                ccf:creator_last_name ?creator_last_name ;
                ccf:x_dimension ?x_dimension ;
                ccf:y_dimension ?y_dimension ;
                ccf:z_dimension ?z_dimension ;
                ccf:dimension_unit ?dimension_units ;
                ccf:annotations ?ccf_annotations .
  ?SpatialPlacement rdf:type ccf:SpatialPlacement ;
                    dcterms:created ?placement_date ;
                    ccf:x_scaling ?x_scaling ;
                    ccf:y_scaling ?y_scaling ;
                    ccf:z_scaling ?z_scaling ;
                    ccf:scaling_unit ?scaling_units ;
                    ccf:x_rotation ?x_rotation ;
                    ccf:y_rotation ?y_rotation ;
                    ccf:z_rotation ?z_rotation ;
                    ccf:rotation_order ?rotation_order ;
                    ccf:rotation_unit ?rotation_units ;
                    ccf:x_translation ?x_translation ;
                    ccf:y_translation ?y_translation ;
                    ccf:z_translation ?z_translation ;
                    ccf:translation_unit ?translation_units ;
                    ccf:placement_relative_to ?target ;
                    ccf:placement_for ?rui_location .
  ?section rdf:type ccf:Sample ;
            ccf:sample_type ?sectionType ;
            ccf:section_number ?sectionNumber ;
            rdfs:label ?sectionLabel ;
            rdfs:comment ?sectionDescription ;
            ccf:url ?sectionLink ;
            ccf:generates_dataset ?sectionDataset .
  ?dataset rdf:type ccf:Dataset ;
           ccf:technology ?technology ;
           ccf:thumbnail ?thumbnail ;
           rdfs:comment ?datasetDescription ;
           rdfs:label ?datasetLabel .
  ?sectionDataset rdf:type ccf:Dataset ;
                  ccf:technology ?sectionTechnology ;
                  ccf:thumbnail ?sectionThumbnail ;
                  rdfs:comment ?sectionDatasetDescription ;
                  rdfs:label ?sectionDatasetLabel .
}
FROM HRA:
FROM HRApop:
WHERE {
  {
    SELECT ?rui_location ?dataset
    WHERE {
      {
        #{{DATASET_VALUES}}
        ?block ccf:has_registration_location ?rui_location .
        ?block ccf:generates_dataset ?dataset .
      }
      UNION
      {
        ?block ccf:subdivided_into_sections ?section .
        ?block ccf:has_registration_location ?rui_location .
        ?section ccf:generates_dataset ?dataset .
      }
    }
  }
  UNION
  {
    SELECT ?rui_location ?dataset
    WHERE {
      {
        #{{RUI_LOCATION_VALUES}}
        ?block ccf:has_registration_location ?rui_location .
        ?block ccf:generates_dataset ?dataset .
      }
      UNION
      {
        ?block ccf:subdivided_into_sections ?section .
        ?block ccf:has_registration_location ?rui_location .
        ?section ccf:generates_dataset ?dataset .
      }
    }
  }
  ?block rdf:type ccf:Sample ;
          ccf:sample_type ?sampleType ;
          ccf:has_registration_location ?rui_location ;
          ccf:comes_from ?donor .
  ?rui_location rdf:type ccf:SpatialEntity ;
                dcterms:creator ?creator ;
                ccf:creator_first_name ?creator_first_name ;
                ccf:creator_last_name ?creator_last_name ;
                ccf:x_dimension ?x_dimension ;
                ccf:y_dimension ?y_dimension ;
                ccf:z_dimension ?z_dimension ;
                ccf:dimension_unit ?dimension_units ;
                ccf:collides_with ?ccf_annotations .
  ?SpatialPlacement rdf:type ccf:SpatialPlacement ;
                    dcterms:created ?placement_date ;
                    ccf:x_scaling ?x_scaling ;
                    ccf:y_scaling ?y_scaling ;
                    ccf:z_scaling ?z_scaling ;
                    ccf:scaling_unit ?scaling_units ;
                    ccf:x_rotation ?x_rotation ;
                    ccf:y_rotation ?y_rotation ;
                    ccf:z_rotation ?z_rotation ;
                    ccf:rotation_order ?rotation_order ;
                    ccf:rotation_unit ?rotation_units ;
                    ccf:x_translation ?x_translation ;
                    ccf:y_translation ?y_translation ;
                    ccf:z_translation ?z_translation ;
                    ccf:translation_unit ?translation_units ;
                    ccf:placement_relative_to ?target ;
                    ccf:placement_for ?rui_location .
  ?donor rdf:type ccf:Donor ;
         ccf:sex ?sex ;
         ccf:consortium_name ?consortium ;
         ccf:tissue_provider_name ?provider ;
         rdfs:label ?donorLabel ;
         rdfs:comment ?donorDescription ;
         ccf:url ?link .

  OPTIONAL {
    ?block ccf:generates_dataset ?dataset . 
    ?dataset ccf:technology ?technology ;
           ccf:thumbnail ?thumbnail ;
           rdfs:comment ?datasetDescription ;
           rdfs:label ?datasetLabel .
  }
  
  OPTIONAL {
    ?block ccf:subdivided_into_sections ?section .
    ?section rdf:type ccf:Sample ;
            ccf:sample_type ?sectionType ;
            ccf:section_number ?sectionNumber ;
            rdfs:label ?sectionLabel ;
            rdfs:comment ?sectionDescription ;
            ccf:url ?sectionLink 
            .
    
    OPTIONAL {
      ?section ccf:generates_dataset ?sectionDataset . 
      ?sectionDataset ccf:technology ?sectionTechnology ;
                ccf:thumbnail ?sectionThumbnail ;
                rdfs:comment ?sectionDatasetDescription ;
                rdfs:label ?sectionDatasetLabel .
    }
  }
  OPTIONAL { ?donor ccf:age ?age . }
  OPTIONAL { ?donor ccf:bmi ?bmi . }
  #{{FILTER}}
  FILTER (?sampleType = "Tissue Block")
}
